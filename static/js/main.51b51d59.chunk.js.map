{"version":3,"sources":["reportWebVitals.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","class","src","id","width","height","onChange","hex","ColorChange","ReactDOM","render","StrictMode","document","getElementById","isDrawing","canvas","context","getContext","penUp","getElementsByClassName","penDown","erase","pinceau","clear","strokeStyle","getMousePos","mouse","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","lineWidth","onclick","clearRect","onmousedown","pos","beginPath","moveTo","onmouseup","onmousemove","fillStyle","lineTo","linecap","stroke"],"mappings":"gPAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,wBCoDCQ,MAjDf,WAKE,OACE,qBAAKC,MAAM,aAAX,SACE,sBAAKA,MAAM,UAAX,UACI,wBAAQC,IAAI,sDAEZ,qBAAKD,MAAM,QAAX,qBAGA,qBAAKA,MAAM,UAAX,SACE,wBAAQE,GAAG,UAAUC,MAAM,MAAMC,OAAO,UAG1C,sBAAKJ,MAAM,SAAX,UACE,wBAAQA,MAAM,SAASE,GAAG,OAA1B,kBACA,wBAAQF,MAAM,SAASE,GAAG,OAA1B,kBACA,wBAAQF,MAAM,SAASE,GAAG,UAA1B,iBACA,wBAAQF,MAAM,SAASE,GAAG,QAA1B,oBACA,wBAAQF,MAAM,SAASE,GAAG,QAA1B,mBAEA,wBAAQF,MAAM,SAAd,iBACA,wBAAQA,MAAM,SAAd,iBACA,wBAAQA,MAAM,SAAd,iBACA,wBAAQA,MAAM,SAAd,iBACA,wBAAQA,MAAM,SAAd,oBAIF,qBAAKA,MAAM,WAAX,SACE,cAAC,IAAD,CACEK,SAhCQ,SAAC,GAAW,IAAVC,EAAS,EAATA,IACpBA,EAAMC,EAAYD,IAgCRH,MAAQ,QAGZ,qBAAKH,MAAM,UAAX,4BAGA,qBAAKA,MAAM,QAAX,yBC1CVQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1B,IAWIC,EAXAC,EAASH,SAASC,eAAe,WACjCG,EAAUD,EAAOE,WAAW,MAI5BC,GADQN,SAASO,uBAAuB,SAChCP,SAASC,eAAe,SAChCO,EAAUR,SAASC,eAAe,QAClCQ,EAAQT,SAASC,eAAe,SAChCS,EAAUV,SAASC,eAAe,WAClCU,EAAQX,SAASC,eAAe,SAkC7B,SAASL,EAAYD,GACxBO,GAAY,EACZE,EAAQQ,YAAcjB,EA8B1B,SAASkB,EAAYV,EAAQW,GACzB,IAAIC,EAAOZ,EAAOa,wBAClB,MAAO,CACLC,EAAGH,EAAMI,QAAUH,EAAKI,KACxBC,EAAGN,EAAMO,QAAUN,EAAKO,KArE9BlB,EAAQmB,UAAY,EAsCpBjB,EAAMkB,QAAU,WACZtB,GAAY,EACZE,EAAQmB,WAAa,GAGzBf,EAAQgB,QAAU,WACdtB,GAAY,EACZE,EAAQmB,WAAa,GAGzBd,EAAMe,QAAU,WACZtB,GAAY,EACZE,EAAQQ,YAAc,SAG1BF,EAAQc,QAAU,WACdtB,GAAY,EACZE,EAAQQ,YAAc,SAG1BD,EAAMa,QAAU,WACZtB,GAAY,EACZE,EAAQqB,UAAU,EAAE,EAAE,IAAK,KAC3BrB,EAAQQ,YAAc,SAY1BT,EAAOuB,YAAc,SAASZ,GAC5B,IAAIa,EAAMd,EAAYV,EAAQW,GAC9BZ,GAAY,EACZE,EAAQwB,YACRxB,EAAQyB,OAAOF,EAAIV,EAAGU,EAAIP,IAG5BjB,EAAO2B,UAAY,WACjB5B,GAAY,GAGdC,EAAO4B,YAAc,SAASjB,GAC5B,GAAIZ,EAAW,CACb,IAAIyB,EAAMd,EAAYV,EAAQW,GAC9BV,EAAQ4B,UAAY,OACpB5B,EAAQ6B,OAAON,EAAIV,EAAGU,EAAIP,GAC1BhB,EAAQ8B,QAAU,QAClB9B,EAAQ+B,WAOZxD,M","file":"static/js/main.51b51d59.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './App.css';\nimport React, {useState} from 'react';\nimport reactCSS from 'reactcss';\nimport {CirclePicker} from 'react-color';\nimport {CompactPicker} from 'react-color';\nimport {SwatchesPicker} from 'react-color';\nimport {GithubPicker} from 'react-color';\nimport {ColorChange} from './index';\n\n\nfunction App() {\n  //const colorChange = ({ hex }) => hex = ColorChange(hex); // fonction change la couleur du pinceau\n  const colorChange = ({hex}) => {\n    hex = ColorChange(hex); // fonction change la couleur du pinceau\n  }\n  return (\n    <div class=\"background\">\n      <div class=\"wrapper\">\n          <script src=\"https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js\"></script>\n\n          <div class=\"titre\">\n            TITRE !\n          </div>\n          <div class=\"drawbox\">\n            <canvas id=\"DrawBox\" width=\"750\" height=\"750\"></canvas>\n          </div>\n\n          <div class=\"outils\">\n            <button class=\"styleB\" id=\"Pen+\">Pen+</button>\n            <button class=\"styleB\" id=\"Pen-\">Pen-</button>\n            <button class=\"styleB\" id=\"Pinceau\">Pen</button>\n            <button class=\"styleB\" id=\"Erase\">Eraser</button>\n            <button class=\"styleB\" id=\"Clear\">Clear</button>\n\n            <button class=\"styleB\" >...</button>\n            <button class=\"styleB\" >...</button>\n            <button class=\"styleB\" >...</button>\n            <button class=\"styleB\" >...</button>\n            <button class=\"styleB\" >...</button>\n\n          </div>\n\n          <div class=\"couleurs\">\n            <CirclePicker\n              onChange={colorChange}\n              width = \"0\"\n            />\n          </div>\n          <div class=\"chatbox\">\n            ChatTEST123545\n          </div>\n          <div class=\"score\">\n            Score\n          </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reactCSS from 'reactcss'\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App'\n//import Peer from 'peerjs';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//Canvas\nvar canvas = document.getElementById('DrawBox');\nvar context = canvas.getContext('2d');\n\n//Pen\nvar color = document.getElementsByClassName('color');\nvar penUp = document.getElementById('Pen+');\nvar penDown = document.getElementById('Pen-');\nvar erase = document.getElementById('Erase');\nvar pinceau = document.getElementById('Pinceau');\nvar clear = document.getElementById('Clear');\ncontext.lineWidth = 8;\nvar isDrawing;\n\n//---------------------------------------------------------------------------\n//---------------------------------------------------------------------------\n//---------------------------------------------------------------------------\n/*\n//Fonction de PeerJS\nwindow.addEventListener('load', (event) =>{\n  var peer = new Peer();\n  var conn = peer.connect('another-peers-id');\n\n  conn.on('open', () => {\n    conn.send('hi!');\n  });\n\n  peer.on('connection', (conn) => {\n    conn.on('data', (data) => {\n      // Will print 'hi!'\n      console.log(data);\n    });\n    conn.on('open', () => {\n      conn.send('hello!');\n    });\n  });\n});\n\n*/\n//---------------------------------------------------------------------------\n//---------------------------------------------------------------------------\n//---------------------------------------------------------------------------\n\n//Fonction sur le pinceau\nexport function ColorChange(hex){\n    isDrawing = false;\n    context.strokeStyle = hex; // change la couleur du trait\n}\n\npenUp.onclick = function() {\n    isDrawing = false;\n    context.lineWidth += 5;\n};\n\npenDown.onclick = function() {\n    isDrawing = false;\n    context.lineWidth -= 5;\n};\n\nerase.onclick = function() {\n    isDrawing = false;\n    context.strokeStyle = \"white\";\n};\n\npinceau.onclick = function() {\n    isDrawing = false;\n    context.strokeStyle = \"black\";\n};\n\nclear.onclick = function() {\n    isDrawing = false;\n    context.clearRect(0,0,1000,1000);\n    context.strokeStyle = \"black\";\n};\n\n//Fonction de dessin\nfunction getMousePos(canvas, mouse) {\n    var rect = canvas.getBoundingClientRect(); // retourne sa position par rapport à la zone d'affichage.\n    return {\n      x: mouse.clientX - rect.left, // position en X de la souris - ditance depuis la droite de la fenêtre par rapport à la zone  de dessin.\n      y: mouse.clientY - rect.top // position en Y de la souris - ditance depuis le haut de la fenêtre par rapport à la zone de dessin.\n    };\n}\n\ncanvas.onmousedown = function(mouse) { //on commence le dessin\n  var pos = getMousePos(canvas, mouse); // position (x,y) du crayon\n  isDrawing = true;\n  context.beginPath(); // commencer un nouveau trait\n  context.moveTo(pos.x, pos.y); //déplacer le crayon avec la méthode à la nouvelle position\n};\n\ncanvas.onmouseup = function() { //on arrete le dessin\n  isDrawing = false;\n};\n\ncanvas.onmousemove = function(mouse) {\n  if (isDrawing) {\n    var pos = getMousePos(canvas, mouse); // position (x,y) du crayon\n    context.fillStyle = 'blue';\n    context.lineTo(pos.x, pos.y); // dessiner une ligne\n    context.linecap = 'round'\n    context.stroke();\n  }\n};\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}